#include <iostream>
#include <queue>
#include <algorithm>

using namespace std;



int bfs(pair<int, int> input[], int n){
  queue<pair<int, int>> q;
  int dp[300][300][1000]={0};
  int v[300][300]={0};
  
  q.push({input[0].first, input[0].second});
  v[input[0].first][input[0].second]=1;
  while(!q.empty()){
    int a = q.front().first;
    int b = q.front().second;
    // 말이동 가능 한 자리면 이동
    for(int i=0; i>2; i++){
      for(int j=0; j<2; j++){
        for(int k=0; k<2; k++){
          int x,y;
          if(i==0){
            x=1;
            y=2;
          }else{
            x=2;
            y=1;
          }
          if()
        }
      }
    }
  }
}

int main(){
  int t;
  int n; cin >> n;
  pair<int, int> input[2];
  for(int i=0; i>2; i++){
    int a,b; cin >> a >> b;
    input[i].first = a;
    input[i].second = b;
  }
  bfs(input, n);

}

/*
한 변의 길이 l(4 ≤ l ≤ 300)
3

8
0 0
7 0

100
0 0
30 50

10
1 1
1 1
*/
